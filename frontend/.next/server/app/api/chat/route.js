/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_shilo_Elective_Chooser_frontend_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/chat/route.ts */ \"(rsc)/./src/app/api/chat/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\shilo\\\\Elective Chooser\\\\frontend\\\\src\\\\app\\\\api\\\\chat\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_shilo_Elective_Chooser_frontend_src_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/chat/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNzaGlsbyU1Q0VsZWN0aXZlJTIwQ2hvb3NlciU1Q2Zyb250ZW5kJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNzaGlsbyU1Q0VsZWN0aXZlJTIwQ2hvb3NlciU1Q2Zyb250ZW5kJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEJmlzR2xvYmFsTm90Rm91bmRFbmFibGVkPSEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDZDtBQUNTO0FBQ087QUFDSztBQUNtQztBQUNqRDtBQUNPO0FBQ2Y7QUFDc0M7QUFDekI7QUFDTTtBQUNDO0FBQ2hCO0FBQ3NDO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWEsT0FBb0MsSUFBSSxDQUFFO0FBQ3ZELHdCQUF3QixNQUF1QztBQUMvRDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFD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QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLDZFQUE2RSxnRkFBYztBQUMzRixpQ0FBaUMsUUFBUSxFQUFFLFFBQVE7QUFDbkQsMEJBQTBCLHVFQUFRO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsNENBQTRDLDZGQUFlO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDJGQUFtQjtBQUNyRDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw2RUFBWTtBQUMxQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgeyBnZXRSZXF1ZXN0TWV0YSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JlcXVlc3QtbWV0YVwiO1xuaW1wb3J0IHsgZ2V0VHJhY2VyLCBTcGFuS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi90cmFjZS90cmFjZXJcIjtcbmltcG9ydCB7IG5vcm1hbGl6ZUFwcFBhdGggfSBmcm9tIFwibmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FwcC1wYXRoc1wiO1xuaW1wb3J0IHsgTm9kZU5leHRSZXF1ZXN0LCBOb2RlTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvYmFzZS1odHRwL25vZGVcIjtcbmltcG9ydCB7IE5leHRSZXF1ZXN0QWRhcHRlciwgc2lnbmFsRnJvbU5vZGVSZXNwb25zZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9uZXh0LXJlcXVlc3RcIjtcbmltcG9ydCB7IEJhc2VTZXJ2ZXJTcGFuIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3RyYWNlL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0UmV2YWxpZGF0ZVJlYXNvbiB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2luc3RydW1lbnRhdGlvbi91dGlsc1wiO1xuaW1wb3J0IHsgc2VuZFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvc2VuZC1yZXNwb25zZVwiO1xuaW1wb3J0IHsgZnJvbU5vZGVPdXRnb2luZ0h0dHBIZWFkZXJzLCB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvd2ViL3V0aWxzXCI7XG5pbXBvcnQgeyBnZXRDYWNoZUNvbnRyb2xIZWFkZXIgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvY2FjaGUtY29udHJvbFwiO1xuaW1wb3J0IHsgSU5GSU5JVEVfQ0FDSEUsIE5FWFRfQ0FDSEVfVEFHU19IRUFERVIgfSBmcm9tIFwibmV4dC9kaXN0L2xpYi9jb25zdGFudHNcIjtcbmltcG9ydCB7IE5vRmFsbGJhY2tFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3Qvc2hhcmVkL2xpYi9uby1mYWxsYmFjay1lcnJvci5leHRlcm5hbFwiO1xuaW1wb3J0IHsgQ2FjaGVkUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcmVzcG9uc2UtY2FjaGVcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxzaGlsb1xcXFxFbGVjdGl2ZSBDaG9vc2VyXFxcXGZyb250ZW5kXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGNoYXRcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jaGF0L3JvdXRlXCJcbiAgICB9LFxuICAgIGRpc3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9ESVNUX0RJUiB8fCAnJyxcbiAgICByZWxhdGl2ZVByb2plY3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9QUk9KRUNUX0RJUiB8fCAnJyxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXHNoaWxvXFxcXEVsZWN0aXZlIENob29zZXJcXFxcZnJvbnRlbmRcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcY2hhdFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzLCBjdHgpIHtcbiAgICB2YXIgX25leHRDb25maWdfZXhwZXJpbWVudGFsO1xuICAgIGxldCBzcmNQYWdlID0gXCIvYXBpL2NoYXQvcm91dGVcIjtcbiAgICAvLyB0dXJib3BhY2sgZG9lc24ndCBub3JtYWxpemUgYC9pbmRleGAgaW4gdGhlIHBhZ2UgbmFtZVxuICAgIC8vIHNvIHdlIG5lZWQgdG8gdG8gcHJvY2VzcyBkeW5hbWljIHJvdXRlcyBwcm9wZXJseVxuICAgIC8vIFRPRE86IGZpeCB0dXJib3BhY2sgcHJvdmlkaW5nIGRpZmZlcmluZyB2YWx1ZSBmcm9tIHdlYnBhY2tcbiAgICBpZiAocHJvY2Vzcy5lbnYuVFVSQk9QQUNLKSB7XG4gICAgICAgIHNyY1BhZ2UgPSBzcmNQYWdlLnJlcGxhY2UoL1xcL2luZGV4JC8sICcnKSB8fCAnLyc7XG4gICAgfSBlbHNlIGlmIChzcmNQYWdlID09PSAnL2luZGV4Jykge1xuICAgICAgICAvLyB3ZSBhbHdheXMgbm9ybWFsaXplIC9pbmRleCBzcGVjaWZpY2FsbHlcbiAgICAgICAgc3JjUGFnZSA9ICcvJztcbiAgICB9XG4gICAgY29uc3QgbXVsdGlab25lRHJhZnRNb2RlID0gcHJvY2Vzcy5lbnYuX19ORVhUX01VTFRJX1pPTkVfRFJBRlRfTU9ERTtcbiAgICBjb25zdCBwcmVwYXJlUmVzdWx0ID0gYXdhaXQgcm91dGVNb2R1bGUucHJlcGFyZShyZXEsIHJlcywge1xuICAgICAgICBzcmNQYWdlLFxuICAgICAgICBtdWx0aVpvbmVEcmFmdE1vZGVcbiAgICB9KTtcbiAgICBpZiAoIXByZXBhcmVSZXN1bHQpIHtcbiAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgICAgIHJlcy5lbmQoJ0JhZCBSZXF1ZXN0Jyk7XG4gICAgICAgIGN0eC53YWl0VW50aWwgPT0gbnVsbCA/IHZvaWQgMCA6IGN0eC53YWl0VW50aWwuY2FsbChjdHgsIFByb21pc2UucmVzb2x2ZSgpKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHsgYnVpbGRJZCwgcGFyYW1zLCBuZXh0Q29uZmlnLCBpc0RyYWZ0TW9kZSwgcHJlcmVuZGVyTWFuaWZlc3QsIHJvdXRlclNlcnZlckNvbnRleHQsIGlzT25EZW1hbmRSZXZhbGlkYXRlLCByZXZhbGlkYXRlT25seUdlbmVyYXRlZCwgcmVzb2x2ZWRQYXRobmFtZSB9ID0gcHJlcGFyZVJlc3VsdDtcbiAgICBjb25zdCBub3JtYWxpemVkU3JjUGFnZSA9IG5vcm1hbGl6ZUFwcFBhdGgoc3JjUGFnZSk7XG4gICAgbGV0IGlzSXNyID0gQm9vbGVhbihwcmVyZW5kZXJNYW5pZmVzdC5keW5hbWljUm91dGVzW25vcm1hbGl6ZWRTcmNQYWdlXSB8fCBwcmVyZW5kZXJNYW5pZmVzdC5yb3V0ZXNbcmVzb2x2ZWRQYXRobmFtZV0pO1xuICAgIGlmIChpc0lzciAmJiAhaXNEcmFmdE1vZGUpIHtcbiAgICAgICAgY29uc3QgaXNQcmVyZW5kZXJlZCA9IEJvb2xlYW4ocHJlcmVuZGVyTWFuaWZlc3Qucm91dGVzW3Jlc29sdmVkUGF0aG5hbWVdKTtcbiAgICAgICAgY29uc3QgcHJlcmVuZGVySW5mbyA9IHByZXJlbmRlck1hbmlmZXN0LmR5bmFtaWNSb3V0ZXNbbm9ybWFsaXplZFNyY1BhZ2VdO1xuICAgICAgICBpZiAocHJlcmVuZGVySW5mbykge1xuICAgICAgICAgICAgaWYgKHByZXJlbmRlckluZm8uZmFsbGJhY2sgPT09IGZhbHNlICYmICFpc1ByZXJlbmRlcmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE5vRmFsbGJhY2tFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBjYWNoZUtleSA9IG51bGw7XG4gICAgaWYgKGlzSXNyICYmICFyb3V0ZU1vZHVsZS5pc0RldiAmJiAhaXNEcmFmdE1vZGUpIHtcbiAgICAgICAgY2FjaGVLZXkgPSByZXNvbHZlZFBhdGhuYW1lO1xuICAgICAgICAvLyBlbnN1cmUgL2luZGV4IGFuZCAvIGlzIG5vcm1hbGl6ZWQgdG8gb25lIGtleVxuICAgICAgICBjYWNoZUtleSA9IGNhY2hlS2V5ID09PSAnL2luZGV4JyA/ICcvJyA6IGNhY2hlS2V5O1xuICAgIH1cbiAgICBjb25zdCBzdXBwb3J0c0R5bmFtaWNSZXNwb25zZSA9IC8vIElmIHdlJ3JlIGluIGRldmVsb3BtZW50LCB3ZSBhbHdheXMgc3VwcG9ydCBkeW5hbWljIEhUTUxcbiAgICByb3V0ZU1vZHVsZS5pc0RldiA9PT0gdHJ1ZSB8fCAvLyBJZiB0aGlzIGlzIG5vdCBTU0cgb3IgZG9lcyBub3QgaGF2ZSBzdGF0aWMgcGF0aHMsIHRoZW4gaXQgc3VwcG9ydHNcbiAgICAvLyBkeW5hbWljIEhUTUwuXG4gICAgIWlzSXNyO1xuICAgIC8vIFRoaXMgaXMgYSByZXZhbGlkYXRpb24gcmVxdWVzdCBpZiB0aGUgcmVxdWVzdCBpcyBmb3IgYSBzdGF0aWNcbiAgICAvLyBwYWdlIGFuZCBpdCBpcyBub3QgYmVpbmcgcmVzdW1lZCBmcm9tIGEgcG9zdHBvbmVkIHJlbmRlciBhbmRcbiAgICAvLyBpdCBpcyBub3QgYSBkeW5hbWljIFJTQyByZXF1ZXN0IHRoZW4gaXQgaXMgYSByZXZhbGlkYXRpb25cbiAgICAvLyByZXF1ZXN0LlxuICAgIGNvbnN0IGlzUmV2YWxpZGF0ZSA9IGlzSXNyICYmICFzdXBwb3J0c0R5bmFtaWNSZXNwb25zZTtcbiAgICBjb25zdCBtZXRob2QgPSByZXEubWV0aG9kIHx8ICdHRVQnO1xuICAgIGNvbnN0IHRyYWNlciA9IGdldFRyYWNlcigpO1xuICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSB0cmFjZXIuZ2V0QWN0aXZlU2NvcGVTcGFuKCk7XG4gICAgY29uc3QgY29udGV4dCA9IHtcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICBwcmVyZW5kZXJNYW5pZmVzdCxcbiAgICAgICAgcmVuZGVyT3B0czoge1xuICAgICAgICAgICAgZXhwZXJpbWVudGFsOiB7XG4gICAgICAgICAgICAgICAgY2FjaGVDb21wb25lbnRzOiBCb29sZWFuKG5leHRDb25maWcuZXhwZXJpbWVudGFsLmNhY2hlQ29tcG9uZW50cyksXG4gICAgICAgICAgICAgICAgYXV0aEludGVycnVwdHM6IEJvb2xlYW4obmV4dENvbmZpZy5leHBlcmltZW50YWwuYXV0aEludGVycnVwdHMpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VwcG9ydHNEeW5hbWljUmVzcG9uc2UsXG4gICAgICAgICAgICBpbmNyZW1lbnRhbENhY2hlOiBnZXRSZXF1ZXN0TWV0YShyZXEsICdpbmNyZW1lbnRhbENhY2hlJyksXG4gICAgICAgICAgICBjYWNoZUxpZmVQcm9maWxlczogKF9uZXh0Q29uZmlnX2V4cGVyaW1lbnRhbCA9IG5leHRDb25maWcuZXhwZXJpbWVudGFsKSA9PSBudWxsID8gdm9pZCAwIDogX25leHRDb25maWdfZXhwZXJpbWVudGFsLmNhY2hlTGlmZSxcbiAgICAgICAgICAgIGlzUmV2YWxpZGF0ZSxcbiAgICAgICAgICAgIHdhaXRVbnRpbDogY3R4LndhaXRVbnRpbCxcbiAgICAgICAgICAgIG9uQ2xvc2U6IChjYik9PntcbiAgICAgICAgICAgICAgICByZXMub24oJ2Nsb3NlJywgY2IpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uQWZ0ZXJUYXNrRXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG9uSW5zdHJ1bWVudGF0aW9uUmVxdWVzdEVycm9yOiAoZXJyb3IsIF9yZXF1ZXN0LCBlcnJvckNvbnRleHQpPT5yb3V0ZU1vZHVsZS5vblJlcXVlc3RFcnJvcihyZXEsIGVycm9yLCBlcnJvckNvbnRleHQsIHJvdXRlclNlcnZlckNvbnRleHQpXG4gICAgICAgIH0sXG4gICAgICAgIHNoYXJlZENvbnRleHQ6IHtcbiAgICAgICAgICAgIGJ1aWxkSWRcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3Qgbm9kZU5leHRSZXEgPSBuZXcgTm9kZU5leHRSZXF1ZXN0KHJlcSk7XG4gICAgY29uc3Qgbm9kZU5leHRSZXMgPSBuZXcgTm9kZU5leHRSZXNwb25zZShyZXMpO1xuICAgIGNvbnN0IG5leHRSZXEgPSBOZXh0UmVxdWVzdEFkYXB0ZXIuZnJvbU5vZGVOZXh0UmVxdWVzdChub2RlTmV4dFJlcSwgc2lnbmFsRnJvbU5vZGVSZXNwb25zZShyZXMpKTtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBpbnZva2VSb3V0ZU1vZHVsZSA9IGFzeW5jIChzcGFuKT0+e1xuICAgICAgICAgICAgcmV0dXJuIHJvdXRlTW9kdWxlLmhhbmRsZShuZXh0UmVxLCBjb250ZXh0KS5maW5hbGx5KCgpPT57XG4gICAgICAgICAgICAgICAgaWYgKCFzcGFuKSByZXR1cm47XG4gICAgICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgICAgICAgICAgJ2h0dHAuc3RhdHVzX2NvZGUnOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgJ25leHQucnNjJzogZmFsc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCByb290U3BhbkF0dHJpYnV0ZXMgPSB0cmFjZXIuZ2V0Um9vdFNwYW5BdHRyaWJ1dGVzKCk7XG4gICAgICAgICAgICAgICAgLy8gV2Ugd2VyZSB1bmFibGUgdG8gZ2V0IGF0dHJpYnV0ZXMsIHByb2JhYmx5IE9URUwgaXMgbm90IGVuYWJsZWRcbiAgICAgICAgICAgICAgICBpZiAoIXJvb3RTcGFuQXR0cmlidXRlcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnNwYW5fdHlwZScpICE9PSBCYXNlU2VydmVyU3Bhbi5oYW5kbGVSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgVW5leHBlY3RlZCByb290IHNwYW4gdHlwZSAnJHtyb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnNwYW5fdHlwZScpfScuIFBsZWFzZSByZXBvcnQgdGhpcyBOZXh0LmpzIGlzc3VlIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qc2ApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJvdXRlID0gcm9vdFNwYW5BdHRyaWJ1dGVzLmdldCgnbmV4dC5yb3V0ZScpO1xuICAgICAgICAgICAgICAgIGlmIChyb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gYCR7bWV0aG9kfSAke3JvdXRlfWA7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAnbmV4dC5yb3V0ZSc6IHJvdXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2h0dHAucm91dGUnOiByb3V0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICduZXh0LnNwYW5fbmFtZSc6IG5hbWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4udXBkYXRlTmFtZShuYW1lKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnVwZGF0ZU5hbWUoYCR7bWV0aG9kfSAke3JlcS51cmx9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhbmRsZVJlc3BvbnNlID0gYXN5bmMgKGN1cnJlbnRTcGFuKT0+e1xuICAgICAgICAgICAgdmFyIF9jYWNoZUVudHJ5X3ZhbHVlO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VHZW5lcmF0b3IgPSBhc3luYyAoeyBwcmV2aW91c0NhY2hlRW50cnkgfSk9PntcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWdldFJlcXVlc3RNZXRhKHJlcSwgJ21pbmltYWxNb2RlJykgJiYgaXNPbkRlbWFuZFJldmFsaWRhdGUgJiYgcmV2YWxpZGF0ZU9ubHlHZW5lcmF0ZWQgJiYgIXByZXZpb3VzQ2FjaGVFbnRyeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBvbi1kZW1hbmQgcmV2YWxpZGF0ZSBhbHdheXMgc2V0cyB0aGlzIGhlYWRlclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcigneC1uZXh0anMtY2FjaGUnLCAnUkVWQUxJREFURUQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5lbmQoJ1RoaXMgcGFnZSBjb3VsZCBub3QgYmUgZm91bmQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaW52b2tlUm91dGVNb2R1bGUoY3VycmVudFNwYW4pO1xuICAgICAgICAgICAgICAgICAgICByZXEuZmV0Y2hNZXRyaWNzID0gY29udGV4dC5yZW5kZXJPcHRzLmZldGNoTWV0cmljcztcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBlbmRpbmdXYWl0VW50aWwgPSBjb250ZXh0LnJlbmRlck9wdHMucGVuZGluZ1dhaXRVbnRpbDtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXR0ZW1wdCB1c2luZyBwcm92aWRlZCB3YWl0VW50aWwgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIGl0J3Mgbm90IHdlIGZhbGxiYWNrIHRvIHNlbmRSZXNwb25zZSdzIGhhbmRsaW5nXG4gICAgICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nV2FpdFVudGlsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3R4LndhaXRVbnRpbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC53YWl0VW50aWwocGVuZGluZ1dhaXRVbnRpbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1dhaXRVbnRpbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWNoZVRhZ3MgPSBjb250ZXh0LnJlbmRlck9wdHMuY29sbGVjdGVkVGFncztcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIHJlcXVlc3QgaXMgZm9yIGEgc3RhdGljIHJlc3BvbnNlLCB3ZSBjYW4gY2FjaGUgaXQgc28gbG9uZ1xuICAgICAgICAgICAgICAgICAgICAvLyBhcyBpdCdzIG5vdCBlZGdlLlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNJc3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDb3B5IHRoZSBoZWFkZXJzIGZyb20gdGhlIHJlc3BvbnNlLlxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMocmVzcG9uc2UuaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVUYWdzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1tORVhUX0NBQ0hFX1RBR1NfSEVBREVSXSA9IGNhY2hlVGFncztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaGVhZGVyc1snY29udGVudC10eXBlJ10gJiYgYmxvYi50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSBibG9iLnR5cGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXZhbGlkYXRlID0gdHlwZW9mIGNvbnRleHQucmVuZGVyT3B0cy5jb2xsZWN0ZWRSZXZhbGlkYXRlID09PSAndW5kZWZpbmVkJyB8fCBjb250ZXh0LnJlbmRlck9wdHMuY29sbGVjdGVkUmV2YWxpZGF0ZSA+PSBJTkZJTklURV9DQUNIRSA/IGZhbHNlIDogY29udGV4dC5yZW5kZXJPcHRzLmNvbGxlY3RlZFJldmFsaWRhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleHBpcmUgPSB0eXBlb2YgY29udGV4dC5yZW5kZXJPcHRzLmNvbGxlY3RlZEV4cGlyZSA9PT0gJ3VuZGVmaW5lZCcgfHwgY29udGV4dC5yZW5kZXJPcHRzLmNvbGxlY3RlZEV4cGlyZSA+PSBJTkZJTklURV9DQUNIRSA/IHVuZGVmaW5lZCA6IGNvbnRleHQucmVuZGVyT3B0cy5jb2xsZWN0ZWRFeHBpcmU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDcmVhdGUgdGhlIGNhY2hlIGVudHJ5IGZvciB0aGUgcmVzcG9uc2UuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWNoZUVudHJ5ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IENhY2hlZFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBCdWZmZXIuZnJvbShhd2FpdCBibG9iLmFycmF5QnVmZmVyKCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUNvbnRyb2w6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV2YWxpZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZUVudHJ5O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2VuZCByZXNwb25zZSB3aXRob3V0IGNhY2hpbmcgaWYgbm90IElTUlxuICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgc2VuZFJlc3BvbnNlKG5vZGVOZXh0UmVxLCBub2RlTmV4dFJlcywgcmVzcG9uc2UsIGNvbnRleHQucmVuZGVyT3B0cy5wZW5kaW5nV2FpdFVudGlsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgYSBiYWNrZ3JvdW5kIHJldmFsaWRhdGUgd2UgbmVlZCB0byByZXBvcnRcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIHJlcXVlc3QgZXJyb3IgaGVyZSBhcyBpdCB3b24ndCBiZSBidWJibGVkXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c0NhY2hlRW50cnkgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZpb3VzQ2FjaGVFbnRyeS5pc1N0YWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCByb3V0ZU1vZHVsZS5vblJlcXVlc3RFcnJvcihyZXEsIGVyciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcktpbmQ6ICdBcHAgUm91dGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZVBhdGg6IHNyY1BhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVUeXBlOiAncm91dGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldmFsaWRhdGVSZWFzb246IGdldFJldmFsaWRhdGVSZWFzb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1JldmFsaWRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHJvdXRlclNlcnZlckNvbnRleHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgY2FjaGVFbnRyeSA9IGF3YWl0IHJvdXRlTW9kdWxlLmhhbmRsZVJlc3BvbnNlKHtcbiAgICAgICAgICAgICAgICByZXEsXG4gICAgICAgICAgICAgICAgbmV4dENvbmZpZyxcbiAgICAgICAgICAgICAgICBjYWNoZUtleSxcbiAgICAgICAgICAgICAgICByb3V0ZUtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgICAgICAgICAgaXNGYWxsYmFjazogZmFsc2UsXG4gICAgICAgICAgICAgICAgcHJlcmVuZGVyTWFuaWZlc3QsXG4gICAgICAgICAgICAgICAgaXNSb3V0ZVBQUkVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlLFxuICAgICAgICAgICAgICAgIHJldmFsaWRhdGVPbmx5R2VuZXJhdGVkLFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlR2VuZXJhdG9yLFxuICAgICAgICAgICAgICAgIHdhaXRVbnRpbDogY3R4LndhaXRVbnRpbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBjcmVhdGUgYSBjYWNoZUVudHJ5IGZvciBJU1JcbiAgICAgICAgICAgIGlmICghaXNJc3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoY2FjaGVFbnRyeSA9PSBudWxsID8gdm9pZCAwIDogKF9jYWNoZUVudHJ5X3ZhbHVlID0gY2FjaGVFbnRyeS52YWx1ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jYWNoZUVudHJ5X3ZhbHVlLmtpbmQpICE9PSBDYWNoZWRSb3V0ZUtpbmQuQVBQX1JPVVRFKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9jYWNoZUVudHJ5X3ZhbHVlMTtcbiAgICAgICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBJbnZhcmlhbnQ6IGFwcC1yb3V0ZSByZWNlaXZlZCBpbnZhbGlkIGNhY2hlIGVudHJ5ICR7Y2FjaGVFbnRyeSA9PSBudWxsID8gdm9pZCAwIDogKF9jYWNoZUVudHJ5X3ZhbHVlMSA9IGNhY2hlRW50cnkudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfY2FjaGVFbnRyeV92YWx1ZTEua2luZH1gKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIkU3MDFcIixcbiAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFnZXRSZXF1ZXN0TWV0YShyZXEsICdtaW5pbWFsTW9kZScpKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcigneC1uZXh0anMtY2FjaGUnLCBpc09uRGVtYW5kUmV2YWxpZGF0ZSA/ICdSRVZBTElEQVRFRCcgOiBjYWNoZUVudHJ5LmlzTWlzcyA/ICdNSVNTJyA6IGNhY2hlRW50cnkuaXNTdGFsZSA/ICdTVEFMRScgOiAnSElUJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBEcmFmdCBtb2RlIHNob3VsZCBuZXZlciBiZSBjYWNoZWRcbiAgICAgICAgICAgIGlmIChpc0RyYWZ0TW9kZSkge1xuICAgICAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnLCAncHJpdmF0ZSwgbm8tY2FjaGUsIG5vLXN0b3JlLCBtYXgtYWdlPTAsIG11c3QtcmV2YWxpZGF0ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IGZyb21Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycyhjYWNoZUVudHJ5LnZhbHVlLmhlYWRlcnMpO1xuICAgICAgICAgICAgaWYgKCEoZ2V0UmVxdWVzdE1ldGEocmVxLCAnbWluaW1hbE1vZGUnKSAmJiBpc0lzcikpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzLmRlbGV0ZShORVhUX0NBQ0hFX1RBR1NfSEVBREVSKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIGNhY2hlIGNvbnRyb2wgaXMgYWxyZWFkeSBzZXQgb24gdGhlIHJlc3BvbnNlIHdlIGRvbid0XG4gICAgICAgICAgICAvLyBvdmVycmlkZSBpdCB0byBhbGxvdyB1c2VycyB0byBjdXN0b21pemUgaXQgdmlhIG5leHQuY29uZmlnXG4gICAgICAgICAgICBpZiAoY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wgJiYgIXJlcy5nZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnKSAmJiAhaGVhZGVycy5nZXQoJ0NhY2hlLUNvbnRyb2wnKSkge1xuICAgICAgICAgICAgICAgIGhlYWRlcnMuc2V0KCdDYWNoZS1Db250cm9sJywgZ2V0Q2FjaGVDb250cm9sSGVhZGVyKGNhY2hlRW50cnkuY2FjaGVDb250cm9sKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhd2FpdCBzZW5kUmVzcG9uc2Uobm9kZU5leHRSZXEsIG5vZGVOZXh0UmVzLCBuZXcgUmVzcG9uc2UoY2FjaGVFbnRyeS52YWx1ZS5ib2R5LCB7XG4gICAgICAgICAgICAgICAgaGVhZGVycyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGNhY2hlRW50cnkudmFsdWUuc3RhdHVzIHx8IDIwMFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH07XG4gICAgICAgIC8vIFRPRE86IGFjdGl2ZVNwYW4gY29kZSBwYXRoIGlzIGZvciB3aGVuIHdyYXBwZWQgYnlcbiAgICAgICAgLy8gbmV4dC1zZXJ2ZXIgY2FuIGJlIHJlbW92ZWQgd2hlbiB0aGlzIGlzIG5vIGxvbmdlciB1c2VkXG4gICAgICAgIGlmIChhY3RpdmVTcGFuKSB7XG4gICAgICAgICAgICBhd2FpdCBoYW5kbGVSZXNwb25zZShhY3RpdmVTcGFuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGF3YWl0IHRyYWNlci53aXRoUHJvcGFnYXRlZENvbnRleHQocmVxLmhlYWRlcnMsICgpPT50cmFjZXIudHJhY2UoQmFzZVNlcnZlclNwYW4uaGFuZGxlUmVxdWVzdCwge1xuICAgICAgICAgICAgICAgICAgICBzcGFuTmFtZTogYCR7bWV0aG9kfSAke3JlcS51cmx9YCxcbiAgICAgICAgICAgICAgICAgICAga2luZDogU3BhbktpbmQuU0VSVkVSLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC5tZXRob2QnOiBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC50YXJnZXQnOiByZXEudXJsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCBoYW5kbGVSZXNwb25zZSkpO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIGlmIHdlIGFyZW4ndCB3cmFwcGVkIGJ5IGJhc2Utc2VydmVyIGhhbmRsZSBoZXJlXG4gICAgICAgIGlmICghYWN0aXZlU3BhbiAmJiAhKGVyciBpbnN0YW5jZW9mIE5vRmFsbGJhY2tFcnJvcikpIHtcbiAgICAgICAgICAgIGF3YWl0IHJvdXRlTW9kdWxlLm9uUmVxdWVzdEVycm9yKHJlcSwgZXJyLCB7XG4gICAgICAgICAgICAgICAgcm91dGVyS2luZDogJ0FwcCBSb3V0ZXInLFxuICAgICAgICAgICAgICAgIHJvdXRlUGF0aDogbm9ybWFsaXplZFNyY1BhZ2UsXG4gICAgICAgICAgICAgICAgcm91dGVUeXBlOiAncm91dGUnLFxuICAgICAgICAgICAgICAgIHJldmFsaWRhdGVSZWFzb246IGdldFJldmFsaWRhdGVSZWFzb24oe1xuICAgICAgICAgICAgICAgICAgICBpc1JldmFsaWRhdGUsXG4gICAgICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJldGhyb3cgc28gdGhhdCB3ZSBjYW4gaGFuZGxlIHNlcnZpbmcgZXJyb3IgcGFnZVxuICAgICAgICAvLyBJZiB0aGlzIGlzIGR1cmluZyBzdGF0aWMgZ2VuZXJhdGlvbiwgdGhyb3cgdGhlIGVycm9yIGFnYWluLlxuICAgICAgICBpZiAoaXNJc3IpIHRocm93IGVycjtcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBzZW5kIGEgNTAwIHJlc3BvbnNlLlxuICAgICAgICBhd2FpdCBzZW5kUmVzcG9uc2Uobm9kZU5leHRSZXEsIG5vZGVOZXh0UmVzLCBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgc3RhdHVzOiA1MDBcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/chat/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/chat/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _lib_openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/openai */ \"(rsc)/./src/lib/openai.ts\");\n/* harmony import */ var _lib_search__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/search */ \"(rsc)/./src/lib/search.ts\");\n/* harmony import */ var _lib_web_search__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/web-search */ \"(rsc)/./src/lib/web-search.ts\");\n/* harmony import */ var _lib_langchain_memory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/langchain-memory */ \"(rsc)/./src/lib/langchain-memory.ts\");\n\n\n\n\n\n\nasync function POST(request) {\n    try {\n        const { message, sessionId, userId } = await request.json();\n        if (!message || !sessionId || !userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing required fields'\n            }, {\n                status: 400\n            });\n        }\n        // Get user profile\n        console.log('🔍 Looking for profile with user_id:', userId);\n        const { data: profiles, error: profileError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from('profiles').select('*').eq('user_id', userId);\n        console.log('🔍 Profile query result:', {\n            profiles,\n            profileError\n        });\n        if (profileError) {\n            console.error('❌ Profile query error:', profileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: `Profile query failed: ${profileError.message}`\n            }, {\n                status: 500\n            });\n        }\n        if (!profiles || profiles.length === 0) {\n            console.error('❌ No profile found for user_id:', userId);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'User profile not found. Please complete your profile setup first.'\n            }, {\n                status: 404\n            });\n        }\n        const profile = profiles[0];\n        console.log('✅ Profile found:', profile);\n        // Get recent conversation history\n        const recentMessages = await (0,_lib_langchain_memory__WEBPACK_IMPORTED_MODULE_5__.getRecentMessages)(sessionId, 6);\n        // Search for relevant information\n        const searchResults = await (0,_lib_web_search__WEBPACK_IMPORTED_MODULE_4__.enhancedSearch)(message, {\n            term: profile.current_term,\n            skills: profile.goal_tags\n        });\n        // Get relevant document chunks for RAG\n        const docChunks = await (0,_lib_search__WEBPACK_IMPORTED_MODULE_3__.searchElectiveDocs)(message, 0.6, 5);\n        // Build context for the LLM\n        const context = buildContext(searchResults, docChunks, profile);\n        // Create conversation messages\n        const messages = [\n            {\n                role: 'system',\n                content: getSystemPrompt(profile)\n            },\n            ...recentMessages.map((msg)=>({\n                    role: msg._getType() === 'human' ? 'user' : 'assistant',\n                    content: msg.content\n                })),\n            {\n                role: 'user',\n                content: `${message}\\n\\nContext:\\n${context}`\n            }\n        ];\n        // Get AI response\n        const aiResponse = await (0,_lib_openai__WEBPACK_IMPORTED_MODULE_2__.getChatCompletion)(messages);\n        // Save messages to database\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from('messages').insert([\n            {\n                session_id: sessionId,\n                role: 'user',\n                content: message,\n                tokens: Math.ceil(message.length / 4)\n            },\n            {\n                session_id: sessionId,\n                role: 'assistant',\n                content: aiResponse,\n                tokens: Math.ceil(aiResponse.length / 4),\n                citations: docChunks.map((chunk)=>({\n                        url: chunk.source_url,\n                        text: chunk.text.substring(0, 200) + '...'\n                    }))\n            }\n        ]);\n        // Generate course recommendations if relevant\n        let recommendations = [];\n        if (shouldGenerateRecommendations(message)) {\n            recommendations = await generateRecommendations(profile, message);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            response: aiResponse,\n            recommendations,\n            sources: searchResults.sources,\n            used_web_search: searchResults.used_web_search\n        });\n    } catch (error) {\n        console.error('Chat API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nfunction buildContext(searchResults, docChunks, profile) {\n    let context = '';\n    // Add course information\n    if (searchResults.results.length > 0) {\n        context += 'Available Courses:\\n';\n        searchResults.results.slice(0, 5).forEach((course)=>{\n            context += `- ${course.id}: ${course.title} (${course.dept})\\n`;\n            context += `  Description: ${course.description?.substring(0, 200)}...\\n`;\n            context += `  Skills: ${course.skills?.join(', ')}\\n`;\n            context += `  Terms: ${course.terms_offered?.join(', ')}\\n\\n`;\n        });\n    }\n    // Add document chunks\n    if (docChunks.length > 0) {\n        context += 'Relevant Information:\\n';\n        docChunks.forEach((chunk, index)=>{\n            context += `${index + 1}. ${chunk.text.substring(0, 300)}...\\n`;\n            context += `   Source: ${chunk.source_url}\\n\\n`;\n        });\n    }\n    // Add user profile context\n    context += `User Profile:\\n`;\n    context += `- Program: ${profile.program}\\n`;\n    context += `- Term: ${profile.current_term}\\n`;\n    context += `- Goals: ${profile.goal_tags.join(', ')}\\n`;\n    context += `- Completed: ${profile.completed_courses.join(', ')}\\n`;\n    return context;\n}\nfunction getSystemPrompt(profile) {\n    return `Hey! 👋 I'm your friendly elective advisor here at Waterloo Engineering. I'm here to help you navigate the maze of course options and find the perfect electives for your goals!\n\n**About you:**\n- Program: ${profile.program || 'Not specified'}\n- Current Term: ${profile.current_term || 'Not specified'}\n- Goals: ${profile.goal_tags.join(', ') || 'Not specified'}\n- Completed Courses: ${profile.completed_courses.join(', ') || 'None'}\n\n**How I can help:**\n- Chat about course options and what might interest you\n- Explain prerequisites and requirements in simple terms\n- Help you understand how courses fit into different specializations\n- Give you the real scoop on workload and term availability\n- Share career insights and why certain courses matter\n\n**My style:**\n- I'm conversational and friendly - no formal academic jargon unless needed\n- I only give recommendations when you ask for them\n- I'll ask questions to understand what you're looking for\n- I'm honest about what I know and don't know\n- I'll point you to official sources when you need the nitty-gritty details\n\nJust chat with me naturally! Ask me anything about electives, courses, or your academic journey. I'm here to help make your course selection process less overwhelming and more exciting! 🚀`;\n}\nfunction shouldGenerateRecommendations(message) {\n    const recommendationTriggers = [\n        'recommend courses',\n        'suggest electives',\n        'what courses should',\n        'which electives',\n        'best electives for',\n        'good courses for',\n        'options for',\n        'course recommendations',\n        'elective suggestions',\n        'help me choose',\n        'what electives'\n    ];\n    // Don't give recommendations for simple greetings\n    const greetings = [\n        'hello',\n        'hi',\n        'hey',\n        'good morning',\n        'good afternoon',\n        'good evening'\n    ];\n    if (greetings.some((greeting)=>message.toLowerCase().includes(greeting))) {\n        return false;\n    }\n    return recommendationTriggers.some((trigger)=>message.toLowerCase().includes(trigger));\n}\nasync function generateRecommendations(profile, query) {\n    // Search for relevant courses\n    const courses = await (0,_lib_search__WEBPACK_IMPORTED_MODULE_3__.searchCourses)(query, {\n        term: profile.current_term,\n        skills: profile.goal_tags\n    });\n    // Calculate scores and generate recommendations\n    const recommendations = courses.map((course)=>({\n            course,\n            ...(0,_lib_search__WEBPACK_IMPORTED_MODULE_3__.calculateCourseScore)(course, profile, profile.goal_tags)\n        })).sort((a, b)=>b.score - a.score).slice(0, 5);\n    return recommendations;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Ozs7Ozs0TEFnQnNILENBQUM7QUFDN0w7QUFFQSxTQUFTYiw4QkFBOEI3QyxPQUFlO0lBQ3BELE1BQU0rRCx5QkFBeUI7UUFDN0I7UUFBcUI7UUFBcUI7UUFBdUI7UUFDakU7UUFBc0I7UUFBb0I7UUFBZTtRQUN6RDtRQUF3QjtRQUFrQjtLQUMzQztJQUVELGtEQUFrRDtJQUNsRCxNQUFNQyxZQUFZO1FBQUM7UUFBUztRQUFNO1FBQU87UUFBZ0I7UUFBa0I7S0FBZTtJQUMxRixJQUFJQSxVQUFVQyxJQUFJLENBQUNDLENBQUFBLFdBQVlsRSxRQUFRbUUsV0FBVyxHQUFHQyxRQUFRLENBQUNGLFlBQVk7UUFDeEUsT0FBTztJQUNUO0lBRUEsT0FBT0gsdUJBQXVCRSxJQUFJLENBQUNJLENBQUFBLFVBQ2pDckUsUUFBUW1FLFdBQVcsR0FBR0MsUUFBUSxDQUFDQztBQUVuQztBQUVBLGVBQWV2Qix3QkFDYi9CLE9BQW9CLEVBQ3BCdUQsS0FBYTtJQUViLDhCQUE4QjtJQUM5QixNQUFNQyxVQUFVLE1BQU03RSwwREFBYUEsQ0FBQzRFLE9BQU87UUFDekNwRCxNQUFNSCxRQUFRSSxZQUFZO1FBQzFCQyxRQUFRTCxRQUFRTSxTQUFTO0lBQzNCO0lBRUEsZ0RBQWdEO0lBQ2hELE1BQU11QixrQkFBa0IyQixRQUNyQjFDLEdBQUcsQ0FBQ3dCLENBQUFBLFNBQVc7WUFDZEE7WUFDQSxHQUFHMUQsaUVBQW9CQSxDQUFDMEQsUUFBUXRDLFNBQVNBLFFBQVFNLFNBQVMsQ0FBQztRQUM3RCxJQUNDbUQsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1BLEVBQUVDLEtBQUssR0FBR0YsRUFBRUUsS0FBSyxFQUNoQ3hCLEtBQUssQ0FBQyxHQUFHO0lBRVosT0FBT1A7QUFDVCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzaGlsb1xcRWxlY3RpdmUgQ2hvb3NlclxcZnJvbnRlbmRcXHNyY1xcYXBwXFxhcGlcXGNoYXRcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcclxuaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICdAL2xpYi9zdXBhYmFzZSdcclxuaW1wb3J0IHsgZ2V0Q2hhdENvbXBsZXRpb24sIGdldEVtYmVkZGluZyB9IGZyb20gJ0AvbGliL29wZW5haSdcclxuaW1wb3J0IHsgc2VhcmNoRWxlY3RpdmVEb2NzLCBzZWFyY2hDb3Vyc2VzLCBjYWxjdWxhdGVDb3Vyc2VTY29yZSB9IGZyb20gJ0AvbGliL3NlYXJjaCdcclxuaW1wb3J0IHsgZW5oYW5jZWRTZWFyY2ggfSBmcm9tICdAL2xpYi93ZWItc2VhcmNoJ1xyXG5pbXBvcnQgeyBnZXRSZWNlbnRNZXNzYWdlcyB9IGZyb20gJ0AvbGliL2xhbmdjaGFpbi1tZW1vcnknXHJcbmltcG9ydCB7IFVzZXJQcm9maWxlIH0gZnJvbSAnQC9saWIvdHlwZXMnXHJcbmltcG9ydCB7IGRlbW9Db3Vyc2VzLCBkZW1vT3B0aW9ucyB9IGZyb20gJ0AvbGliL2RlbW8tZGF0YSdcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgbWVzc2FnZSwgc2Vzc2lvbklkLCB1c2VySWQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXHJcblxyXG4gICAgaWYgKCFtZXNzYWdlIHx8ICFzZXNzaW9uSWQgfHwgIXVzZXJJZCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ01pc3NpbmcgcmVxdWlyZWQgZmllbGRzJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgLy8gR2V0IHVzZXIgcHJvZmlsZVxyXG4gICAgY29uc29sZS5sb2coJ/CflI0gTG9va2luZyBmb3IgcHJvZmlsZSB3aXRoIHVzZXJfaWQ6JywgdXNlcklkKVxyXG4gICAgXHJcbiAgICBjb25zdCB7IGRhdGE6IHByb2ZpbGVzLCBlcnJvcjogcHJvZmlsZUVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgncHJvZmlsZXMnKVxyXG4gICAgICAuc2VsZWN0KCcqJylcclxuICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFByb2ZpbGUgcXVlcnkgcmVzdWx0OicsIHsgcHJvZmlsZXMsIHByb2ZpbGVFcnJvciB9KVxyXG5cclxuICAgIGlmIChwcm9maWxlRXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcign4p2MIFByb2ZpbGUgcXVlcnkgZXJyb3I6JywgcHJvZmlsZUVycm9yKVxyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogYFByb2ZpbGUgcXVlcnkgZmFpbGVkOiAke3Byb2ZpbGVFcnJvci5tZXNzYWdlfWAgfSxcclxuICAgICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICAgKVxyXG4gICAgfVxyXG5cclxuICAgIGlmICghcHJvZmlsZXMgfHwgcHJvZmlsZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBObyBwcm9maWxlIGZvdW5kIGZvciB1c2VyX2lkOicsIHVzZXJJZClcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdVc2VyIHByb2ZpbGUgbm90IGZvdW5kLiBQbGVhc2UgY29tcGxldGUgeW91ciBwcm9maWxlIHNldHVwIGZpcnN0LicgfSxcclxuICAgICAgICB7IHN0YXR1czogNDA0IH1cclxuICAgICAgKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByb2ZpbGUgPSBwcm9maWxlc1swXVxyXG4gICAgY29uc29sZS5sb2coJ+KchSBQcm9maWxlIGZvdW5kOicsIHByb2ZpbGUpXHJcblxyXG4gICAgLy8gR2V0IHJlY2VudCBjb252ZXJzYXRpb24gaGlzdG9yeVxyXG4gICAgY29uc3QgcmVjZW50TWVzc2FnZXMgPSBhd2FpdCBnZXRSZWNlbnRNZXNzYWdlcyhzZXNzaW9uSWQsIDYpXHJcblxyXG4gICAgLy8gU2VhcmNoIGZvciByZWxldmFudCBpbmZvcm1hdGlvblxyXG4gICAgY29uc3Qgc2VhcmNoUmVzdWx0cyA9IGF3YWl0IGVuaGFuY2VkU2VhcmNoKG1lc3NhZ2UsIHtcclxuICAgICAgdGVybTogcHJvZmlsZS5jdXJyZW50X3Rlcm0sXHJcbiAgICAgIHNraWxsczogcHJvZmlsZS5nb2FsX3RhZ3NcclxuICAgIH0pXHJcblxyXG4gICAgLy8gR2V0IHJlbGV2YW50IGRvY3VtZW50IGNodW5rcyBmb3IgUkFHXHJcbiAgICBjb25zdCBkb2NDaHVua3MgPSBhd2FpdCBzZWFyY2hFbGVjdGl2ZURvY3MobWVzc2FnZSwgMC42LCA1KVxyXG5cclxuICAgIC8vIEJ1aWxkIGNvbnRleHQgZm9yIHRoZSBMTE1cclxuICAgIGNvbnN0IGNvbnRleHQgPSBidWlsZENvbnRleHQoc2VhcmNoUmVzdWx0cywgZG9jQ2h1bmtzLCBwcm9maWxlKVxyXG5cclxuICAgIC8vIENyZWF0ZSBjb252ZXJzYXRpb24gbWVzc2FnZXNcclxuICAgIGNvbnN0IG1lc3NhZ2VzID0gW1xyXG4gICAgICB7XHJcbiAgICAgICAgcm9sZTogJ3N5c3RlbScgYXMgY29uc3QsXHJcbiAgICAgICAgY29udGVudDogZ2V0U3lzdGVtUHJvbXB0KHByb2ZpbGUpXHJcbiAgICAgIH0sXHJcbiAgICAgIC4uLnJlY2VudE1lc3NhZ2VzLm1hcChtc2cgPT4gKHtcclxuICAgICAgICByb2xlOiBtc2cuX2dldFR5cGUoKSA9PT0gJ2h1bWFuJyA/ICd1c2VyJyBhcyBjb25zdCA6ICdhc3Npc3RhbnQnIGFzIGNvbnN0LFxyXG4gICAgICAgIGNvbnRlbnQ6IG1zZy5jb250ZW50XHJcbiAgICAgIH0pKSxcclxuICAgICAge1xyXG4gICAgICAgIHJvbGU6ICd1c2VyJyBhcyBjb25zdCxcclxuICAgICAgICBjb250ZW50OiBgJHttZXNzYWdlfVxcblxcbkNvbnRleHQ6XFxuJHtjb250ZXh0fWBcclxuICAgICAgfVxyXG4gICAgXVxyXG5cclxuICAgIC8vIEdldCBBSSByZXNwb25zZVxyXG4gICAgY29uc3QgYWlSZXNwb25zZSA9IGF3YWl0IGdldENoYXRDb21wbGV0aW9uKG1lc3NhZ2VzKVxyXG5cclxuICAgIC8vIFNhdmUgbWVzc2FnZXMgdG8gZGF0YWJhc2VcclxuICAgIGF3YWl0IHN1cGFiYXNlLmZyb20oJ21lc3NhZ2VzJykuaW5zZXJ0KFtcclxuICAgICAge1xyXG4gICAgICAgIHNlc3Npb25faWQ6IHNlc3Npb25JZCxcclxuICAgICAgICByb2xlOiAndXNlcicsXHJcbiAgICAgICAgY29udGVudDogbWVzc2FnZSxcclxuICAgICAgICB0b2tlbnM6IE1hdGguY2VpbChtZXNzYWdlLmxlbmd0aCAvIDQpXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBzZXNzaW9uX2lkOiBzZXNzaW9uSWQsXHJcbiAgICAgICAgcm9sZTogJ2Fzc2lzdGFudCcsXHJcbiAgICAgICAgY29udGVudDogYWlSZXNwb25zZSxcclxuICAgICAgICB0b2tlbnM6IE1hdGguY2VpbChhaVJlc3BvbnNlLmxlbmd0aCAvIDQpLFxyXG4gICAgICAgIGNpdGF0aW9uczogZG9jQ2h1bmtzLm1hcChjaHVuayA9PiAoe1xyXG4gICAgICAgICAgdXJsOiBjaHVuay5zb3VyY2VfdXJsLFxyXG4gICAgICAgICAgdGV4dDogY2h1bmsudGV4dC5zdWJzdHJpbmcoMCwgMjAwKSArICcuLi4nXHJcbiAgICAgICAgfSkpXHJcbiAgICAgIH1cclxuICAgIF0pXHJcblxyXG4gICAgLy8gR2VuZXJhdGUgY291cnNlIHJlY29tbWVuZGF0aW9ucyBpZiByZWxldmFudFxyXG4gICAgbGV0IHJlY29tbWVuZGF0aW9ucyA9IFtdXHJcbiAgICBpZiAoc2hvdWxkR2VuZXJhdGVSZWNvbW1lbmRhdGlvbnMobWVzc2FnZSkpIHtcclxuICAgICAgcmVjb21tZW5kYXRpb25zID0gYXdhaXQgZ2VuZXJhdGVSZWNvbW1lbmRhdGlvbnMocHJvZmlsZSwgbWVzc2FnZSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICByZXNwb25zZTogYWlSZXNwb25zZSxcclxuICAgICAgcmVjb21tZW5kYXRpb25zLFxyXG4gICAgICBzb3VyY2VzOiBzZWFyY2hSZXN1bHRzLnNvdXJjZXMsXHJcbiAgICAgIHVzZWRfd2ViX3NlYXJjaDogc2VhcmNoUmVzdWx0cy51c2VkX3dlYl9zZWFyY2hcclxuICAgIH0pXHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdDaGF0IEFQSSBlcnJvcjonLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSxcclxuICAgICAgeyBzdGF0dXM6IDUwMCB9XHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBidWlsZENvbnRleHQoXHJcbiAgc2VhcmNoUmVzdWx0czogYW55LFxyXG4gIGRvY0NodW5rczogYW55W10sXHJcbiAgcHJvZmlsZTogVXNlclByb2ZpbGVcclxuKTogc3RyaW5nIHtcclxuICBsZXQgY29udGV4dCA9ICcnXHJcblxyXG4gIC8vIEFkZCBjb3Vyc2UgaW5mb3JtYXRpb25cclxuICBpZiAoc2VhcmNoUmVzdWx0cy5yZXN1bHRzLmxlbmd0aCA+IDApIHtcclxuICAgIGNvbnRleHQgKz0gJ0F2YWlsYWJsZSBDb3Vyc2VzOlxcbidcclxuICAgIHNlYXJjaFJlc3VsdHMucmVzdWx0cy5zbGljZSgwLCA1KS5mb3JFYWNoKChjb3Vyc2U6IGFueSkgPT4ge1xyXG4gICAgICBjb250ZXh0ICs9IGAtICR7Y291cnNlLmlkfTogJHtjb3Vyc2UudGl0bGV9ICgke2NvdXJzZS5kZXB0fSlcXG5gXHJcbiAgICAgIGNvbnRleHQgKz0gYCAgRGVzY3JpcHRpb246ICR7Y291cnNlLmRlc2NyaXB0aW9uPy5zdWJzdHJpbmcoMCwgMjAwKX0uLi5cXG5gXHJcbiAgICAgIGNvbnRleHQgKz0gYCAgU2tpbGxzOiAke2NvdXJzZS5za2lsbHM/LmpvaW4oJywgJyl9XFxuYFxyXG4gICAgICBjb250ZXh0ICs9IGAgIFRlcm1zOiAke2NvdXJzZS50ZXJtc19vZmZlcmVkPy5qb2luKCcsICcpfVxcblxcbmBcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICAvLyBBZGQgZG9jdW1lbnQgY2h1bmtzXHJcbiAgaWYgKGRvY0NodW5rcy5sZW5ndGggPiAwKSB7XHJcbiAgICBjb250ZXh0ICs9ICdSZWxldmFudCBJbmZvcm1hdGlvbjpcXG4nXHJcbiAgICBkb2NDaHVua3MuZm9yRWFjaCgoY2h1bmssIGluZGV4KSA9PiB7XHJcbiAgICAgIGNvbnRleHQgKz0gYCR7aW5kZXggKyAxfS4gJHtjaHVuay50ZXh0LnN1YnN0cmluZygwLCAzMDApfS4uLlxcbmBcclxuICAgICAgY29udGV4dCArPSBgICAgU291cmNlOiAke2NodW5rLnNvdXJjZV91cmx9XFxuXFxuYFxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8vIEFkZCB1c2VyIHByb2ZpbGUgY29udGV4dFxyXG4gIGNvbnRleHQgKz0gYFVzZXIgUHJvZmlsZTpcXG5gXHJcbiAgY29udGV4dCArPSBgLSBQcm9ncmFtOiAke3Byb2ZpbGUucHJvZ3JhbX1cXG5gXHJcbiAgY29udGV4dCArPSBgLSBUZXJtOiAke3Byb2ZpbGUuY3VycmVudF90ZXJtfVxcbmBcclxuICBjb250ZXh0ICs9IGAtIEdvYWxzOiAke3Byb2ZpbGUuZ29hbF90YWdzLmpvaW4oJywgJyl9XFxuYFxyXG4gIGNvbnRleHQgKz0gYC0gQ29tcGxldGVkOiAke3Byb2ZpbGUuY29tcGxldGVkX2NvdXJzZXMuam9pbignLCAnKX1cXG5gXHJcblxyXG4gIHJldHVybiBjb250ZXh0XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFN5c3RlbVByb21wdChwcm9maWxlOiBVc2VyUHJvZmlsZSk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIGBIZXkhIPCfkYsgSSdtIHlvdXIgZnJpZW5kbHkgZWxlY3RpdmUgYWR2aXNvciBoZXJlIGF0IFdhdGVybG9vIEVuZ2luZWVyaW5nLiBJJ20gaGVyZSB0byBoZWxwIHlvdSBuYXZpZ2F0ZSB0aGUgbWF6ZSBvZiBjb3Vyc2Ugb3B0aW9ucyBhbmQgZmluZCB0aGUgcGVyZmVjdCBlbGVjdGl2ZXMgZm9yIHlvdXIgZ29hbHMhXHJcblxyXG4qKkFib3V0IHlvdToqKlxyXG4tIFByb2dyYW06ICR7cHJvZmlsZS5wcm9ncmFtIHx8ICdOb3Qgc3BlY2lmaWVkJ31cclxuLSBDdXJyZW50IFRlcm06ICR7cHJvZmlsZS5jdXJyZW50X3Rlcm0gfHwgJ05vdCBzcGVjaWZpZWQnfVxyXG4tIEdvYWxzOiAke3Byb2ZpbGUuZ29hbF90YWdzLmpvaW4oJywgJykgfHwgJ05vdCBzcGVjaWZpZWQnfVxyXG4tIENvbXBsZXRlZCBDb3Vyc2VzOiAke3Byb2ZpbGUuY29tcGxldGVkX2NvdXJzZXMuam9pbignLCAnKSB8fCAnTm9uZSd9XHJcblxyXG4qKkhvdyBJIGNhbiBoZWxwOioqXHJcbi0gQ2hhdCBhYm91dCBjb3Vyc2Ugb3B0aW9ucyBhbmQgd2hhdCBtaWdodCBpbnRlcmVzdCB5b3VcclxuLSBFeHBsYWluIHByZXJlcXVpc2l0ZXMgYW5kIHJlcXVpcmVtZW50cyBpbiBzaW1wbGUgdGVybXNcclxuLSBIZWxwIHlvdSB1bmRlcnN0YW5kIGhvdyBjb3Vyc2VzIGZpdCBpbnRvIGRpZmZlcmVudCBzcGVjaWFsaXphdGlvbnNcclxuLSBHaXZlIHlvdSB0aGUgcmVhbCBzY29vcCBvbiB3b3JrbG9hZCBhbmQgdGVybSBhdmFpbGFiaWxpdHlcclxuLSBTaGFyZSBjYXJlZXIgaW5zaWdodHMgYW5kIHdoeSBjZXJ0YWluIGNvdXJzZXMgbWF0dGVyXHJcblxyXG4qKk15IHN0eWxlOioqXHJcbi0gSSdtIGNvbnZlcnNhdGlvbmFsIGFuZCBmcmllbmRseSAtIG5vIGZvcm1hbCBhY2FkZW1pYyBqYXJnb24gdW5sZXNzIG5lZWRlZFxyXG4tIEkgb25seSBnaXZlIHJlY29tbWVuZGF0aW9ucyB3aGVuIHlvdSBhc2sgZm9yIHRoZW1cclxuLSBJJ2xsIGFzayBxdWVzdGlvbnMgdG8gdW5kZXJzdGFuZCB3aGF0IHlvdSdyZSBsb29raW5nIGZvclxyXG4tIEknbSBob25lc3QgYWJvdXQgd2hhdCBJIGtub3cgYW5kIGRvbid0IGtub3dcclxuLSBJJ2xsIHBvaW50IHlvdSB0byBvZmZpY2lhbCBzb3VyY2VzIHdoZW4geW91IG5lZWQgdGhlIG5pdHR5LWdyaXR0eSBkZXRhaWxzXHJcblxyXG5KdXN0IGNoYXQgd2l0aCBtZSBuYXR1cmFsbHkhIEFzayBtZSBhbnl0aGluZyBhYm91dCBlbGVjdGl2ZXMsIGNvdXJzZXMsIG9yIHlvdXIgYWNhZGVtaWMgam91cm5leS4gSSdtIGhlcmUgdG8gaGVscCBtYWtlIHlvdXIgY291cnNlIHNlbGVjdGlvbiBwcm9jZXNzIGxlc3Mgb3ZlcndoZWxtaW5nIGFuZCBtb3JlIGV4Y2l0aW5nISDwn5qAYFxyXG59XHJcblxyXG5mdW5jdGlvbiBzaG91bGRHZW5lcmF0ZVJlY29tbWVuZGF0aW9ucyhtZXNzYWdlOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICBjb25zdCByZWNvbW1lbmRhdGlvblRyaWdnZXJzID0gW1xyXG4gICAgJ3JlY29tbWVuZCBjb3Vyc2VzJywgJ3N1Z2dlc3QgZWxlY3RpdmVzJywgJ3doYXQgY291cnNlcyBzaG91bGQnLCAnd2hpY2ggZWxlY3RpdmVzJyxcclxuICAgICdiZXN0IGVsZWN0aXZlcyBmb3InLCAnZ29vZCBjb3Vyc2VzIGZvcicsICdvcHRpb25zIGZvcicsICdjb3Vyc2UgcmVjb21tZW5kYXRpb25zJyxcclxuICAgICdlbGVjdGl2ZSBzdWdnZXN0aW9ucycsICdoZWxwIG1lIGNob29zZScsICd3aGF0IGVsZWN0aXZlcydcclxuICBdXHJcbiAgXHJcbiAgLy8gRG9uJ3QgZ2l2ZSByZWNvbW1lbmRhdGlvbnMgZm9yIHNpbXBsZSBncmVldGluZ3NcclxuICBjb25zdCBncmVldGluZ3MgPSBbJ2hlbGxvJywgJ2hpJywgJ2hleScsICdnb29kIG1vcm5pbmcnLCAnZ29vZCBhZnRlcm5vb24nLCAnZ29vZCBldmVuaW5nJ11cclxuICBpZiAoZ3JlZXRpbmdzLnNvbWUoZ3JlZXRpbmcgPT4gbWVzc2FnZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGdyZWV0aW5nKSkpIHtcclxuICAgIHJldHVybiBmYWxzZVxyXG4gIH1cclxuICBcclxuICByZXR1cm4gcmVjb21tZW5kYXRpb25UcmlnZ2Vycy5zb21lKHRyaWdnZXIgPT4gXHJcbiAgICBtZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModHJpZ2dlcilcclxuICApXHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlUmVjb21tZW5kYXRpb25zKFxyXG4gIHByb2ZpbGU6IFVzZXJQcm9maWxlLFxyXG4gIHF1ZXJ5OiBzdHJpbmdcclxuKTogUHJvbWlzZTxhbnlbXT4ge1xyXG4gIC8vIFNlYXJjaCBmb3IgcmVsZXZhbnQgY291cnNlc1xyXG4gIGNvbnN0IGNvdXJzZXMgPSBhd2FpdCBzZWFyY2hDb3Vyc2VzKHF1ZXJ5LCB7XHJcbiAgICB0ZXJtOiBwcm9maWxlLmN1cnJlbnRfdGVybSxcclxuICAgIHNraWxsczogcHJvZmlsZS5nb2FsX3RhZ3NcclxuICB9KVxyXG5cclxuICAvLyBDYWxjdWxhdGUgc2NvcmVzIGFuZCBnZW5lcmF0ZSByZWNvbW1lbmRhdGlvbnNcclxuICBjb25zdCByZWNvbW1lbmRhdGlvbnMgPSBjb3Vyc2VzXHJcbiAgICAubWFwKGNvdXJzZSA9PiAoe1xyXG4gICAgICBjb3Vyc2UsXHJcbiAgICAgIC4uLmNhbGN1bGF0ZUNvdXJzZVNjb3JlKGNvdXJzZSwgcHJvZmlsZSwgcHJvZmlsZS5nb2FsX3RhZ3MpXHJcbiAgICB9KSlcclxuICAgIC5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSlcclxuICAgIC5zbGljZSgwLCA1KVxyXG5cclxuICByZXR1cm4gcmVjb21tZW5kYXRpb25zXHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInN1cGFiYXNlIiwiZ2V0Q2hhdENvbXBsZXRpb24iLCJzZWFyY2hFbGVjdGl2ZURvY3MiLCJzZWFyY2hDb3Vyc2VzIiwiY2FsY3VsYXRlQ291cnNlU2NvcmUiLCJlbmhhbmNlZFNlYXJjaCIsImdldFJlY2VudE1lc3NhZ2VzIiwiUE9TVCIsInJlcXVlc3QiLCJtZXNzYWdlIiwic2Vzc2lvbklkIiwidXNlcklkIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJwcm9maWxlcyIsInByb2ZpbGVFcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsImxlbmd0aCIsInByb2ZpbGUiLCJyZWNlbnRNZXNzYWdlcyIsInNlYXJjaFJlc3VsdHMiLCJ0ZXJtIiwiY3VycmVudF90ZXJtIiwic2tpbGxzIiwiZ29hbF90YWdzIiwiZG9jQ2h1bmtzIiwiY29udGV4dCIsImJ1aWxkQ29udGV4dCIsIm1lc3NhZ2VzIiwicm9sZSIsImNvbnRlbnQiLCJnZXRTeXN0ZW1Qcm9tcHQiLCJtYXAiLCJtc2ciLCJfZ2V0VHlwZSIsImFpUmVzcG9uc2UiLCJpbnNlcnQiLCJzZXNzaW9uX2lkIiwidG9rZW5zIiwiTWF0aCIsImNlaWwiLCJjaXRhdGlvbnMiLCJjaHVuayIsInVybCIsInNvdXJjZV91cmwiLCJ0ZXh0Iiwic3Vic3RyaW5nIiwicmVjb21tZW5kYXRpb25zIiwic2hvdWxkR2VuZXJhdGVSZWNvbW1lbmRhdGlvbnMiLCJnZW5lcmF0ZVJlY29tbWVuZGF0aW9ucyIsInJlc3BvbnNlIiwic291cmNlcyIsInVzZWRfd2ViX3NlYXJjaCIsInJlc3VsdHMiLCJzbGljZSIsImZvckVhY2giLCJjb3Vyc2UiLCJpZCIsInRpdGxlIiwiZGVwdCIsImRlc2NyaXB0aW9uIiwiam9pbiIsInRlcm1zX29mZmVyZWQiLCJpbmRleCIsInByb2dyYW0iLCJjb21wbGV0ZWRfY291cnNlcyIsInJlY29tbWVuZGF0aW9uVHJpZ2dlcnMiLCJncmVldGluZ3MiLCJzb21lIiwiZ3JlZXRpbmciLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwidHJpZ2dlciIsInF1ZXJ5IiwiY291cnNlcyIsInNvcnQiLCJhIiwiYiIsInNjb3JlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/langchain-memory.ts":
/*!*************************************!*\
  !*** ./src/lib/langchain-memory.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseChatMessageHistory: () => (/* binding */ SupabaseChatMessageHistory),\n/* harmony export */   createChatMemory: () => (/* binding */ createChatMemory),\n/* harmony export */   getRecentMessages: () => (/* binding */ getRecentMessages)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_chat_history__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/chat_history */ \"(rsc)/./node_modules/@langchain/core/chat_history.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\n\n\nclass SupabaseChatMessageHistory extends _langchain_core_chat_history__WEBPACK_IMPORTED_MODULE_0__.BaseChatMessageHistory {\n    constructor(sessionId, userId){\n        super();\n        this.sessionId = sessionId;\n        this.userId = userId;\n    }\n    async getMessages() {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('messages').select('*').eq('session_id', this.sessionId).order('created_at', {\n            ascending: true\n        });\n        if (error) {\n            console.error('Error fetching messages:', error);\n            return [];\n        }\n        return (data || []).map((msg)=>{\n            switch(msg.role){\n                case 'user':\n                    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(msg.content);\n                case 'assistant':\n                    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.AIMessage(msg.content);\n                case 'system':\n                    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.SystemMessage(msg.content);\n                default:\n                    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(msg.content);\n            }\n        });\n    }\n    async addMessage(message) {\n        const role = message._getType() === 'human' ? 'user' : message._getType() === 'ai' ? 'assistant' : 'system';\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('messages').insert({\n            session_id: this.sessionId,\n            role,\n            content: message.content,\n            tokens: this.estimateTokens(message.content)\n        });\n        if (error) {\n            console.error('Error adding message:', error);\n        }\n    }\n    async addUserMessage(message) {\n        await this.addMessage(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(message));\n    }\n    async addAIMessage(message) {\n        await this.addMessage(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.AIMessage(message));\n    }\n    async clear() {\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('messages').delete().eq('session_id', this.sessionId);\n        if (error) {\n            console.error('Error clearing messages:', error);\n        }\n    }\n    estimateTokens(text) {\n        // Rough estimation: 1 token ≈ 4 characters for English text\n        return Math.ceil(text.length / 4);\n    }\n}\n// Memory factory\nfunction createChatMemory(sessionId, userId) {\n    return new SupabaseChatMessageHistory(sessionId, userId);\n}\n// Get recent messages for context (last N messages)\nasync function getRecentMessages(sessionId, limit = 10) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('messages').select('*').eq('session_id', sessionId).order('created_at', {\n        ascending: false\n    }).limit(limit);\n    if (error) {\n        console.error('Error fetching recent messages:', error);\n        return [];\n    }\n    return (data || []).reverse().map((msg)=>{\n        switch(msg.role){\n            case 'user':\n                return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(msg.content);\n            case 'assistant':\n                return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.AIMessage(msg.content);\n            case 'system':\n                return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.SystemMessage(msg.content);\n            default:\n                return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.HumanMessage(msg.content);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/langchain-memory.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/openai.ts":
/*!***************************!*\
  !*** ./src/lib/openai.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChatCompletion: () => (/* binding */ getChatCompletion),\n/* harmony export */   getEmbedding: () => (/* binding */ getEmbedding),\n/* harmony export */   openai: () => (/* binding */ openai)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\n// Check OpenAI configuration\nconst openaiApiKey = process.env.OPENAI_API_KEY;\nconsole.log('🔧 OpenAI Configuration:');\nconsole.log('  OPENAI_API_KEY:', openaiApiKey ? '✅ SET' : '❌ NOT SET');\nif (!openaiApiKey) {\n    console.warn('⚠️ OpenAI API key not set. Please add OPENAI_API_KEY to your .env.local file');\n}\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: openaiApiKey\n});\n\n// Embedding function for RAG\nasync function getEmbedding(text) {\n    const response = await openai.embeddings.create({\n        model: 'text-embedding-3-large',\n        input: text\n    });\n    return response.data[0].embedding;\n}\n// Chat completion for the chatbot\nasync function getChatCompletion(messages, temperature = 0.2) {\n    const response = await openai.chat.completions.create({\n        model: 'gpt-4o-mini',\n        messages,\n        temperature,\n        max_tokens: 1000\n    });\n    return response.choices[0].message.content || '';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL29wZW5haS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJCO0FBRTNCLDZCQUE2QjtBQUM3QixNQUFNQyxlQUFlQyxRQUFRQyxHQUFHLENBQUNDLGNBQWM7QUFDL0NDLFFBQVFDLEdBQUcsQ0FBQztBQUNaRCxRQUFRQyxHQUFHLENBQUMscUJBQXFCTCxlQUFlLFVBQVU7QUFFMUQsSUFBSSxDQUFDQSxjQUFjO0lBQ2pCSSxRQUFRRSxJQUFJLENBQUM7QUFDZjtBQUVBLE1BQU1DLFNBQVMsSUFBSVIsOENBQU1BLENBQUM7SUFDeEJTLFFBQVFSO0FBQ1Y7QUFFaUI7QUFFakIsNkJBQTZCO0FBQ3RCLGVBQWVTLGFBQWFDLElBQVk7SUFDN0MsTUFBTUMsV0FBVyxNQUFNSixPQUFPSyxVQUFVLENBQUNDLE1BQU0sQ0FBQztRQUM5Q0MsT0FBTztRQUNQQyxPQUFPTDtJQUNUO0lBRUEsT0FBT0MsU0FBU0ssSUFBSSxDQUFDLEVBQUUsQ0FBQ0MsU0FBUztBQUNuQztBQUVBLGtDQUFrQztBQUMzQixlQUFlQyxrQkFDcEJDLFFBQTJFLEVBQzNFQyxjQUFzQixHQUFHO0lBRXpCLE1BQU1ULFdBQVcsTUFBTUosT0FBT2MsSUFBSSxDQUFDQyxXQUFXLENBQUNULE1BQU0sQ0FBQztRQUNwREMsT0FBTztRQUNQSztRQUNBQztRQUNBRyxZQUFZO0lBQ2Q7SUFFQSxPQUFPWixTQUFTYSxPQUFPLENBQUMsRUFBRSxDQUFDQyxPQUFPLENBQUNDLE9BQU8sSUFBSTtBQUNoRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzaGlsb1xcRWxlY3RpdmUgQ2hvb3NlclxcZnJvbnRlbmRcXHNyY1xcbGliXFxvcGVuYWkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9wZW5BSSBmcm9tICdvcGVuYWknXHJcblxyXG4vLyBDaGVjayBPcGVuQUkgY29uZmlndXJhdGlvblxyXG5jb25zdCBvcGVuYWlBcGlLZXkgPSBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWVxyXG5jb25zb2xlLmxvZygn8J+UpyBPcGVuQUkgQ29uZmlndXJhdGlvbjonKVxyXG5jb25zb2xlLmxvZygnICBPUEVOQUlfQVBJX0tFWTonLCBvcGVuYWlBcGlLZXkgPyAn4pyFIFNFVCcgOiAn4p2MIE5PVCBTRVQnKVxyXG5cclxuaWYgKCFvcGVuYWlBcGlLZXkpIHtcclxuICBjb25zb2xlLndhcm4oJ+KaoO+4jyBPcGVuQUkgQVBJIGtleSBub3Qgc2V0LiBQbGVhc2UgYWRkIE9QRU5BSV9BUElfS0VZIHRvIHlvdXIgLmVudi5sb2NhbCBmaWxlJylcclxufVxyXG5cclxuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSh7XHJcbiAgYXBpS2V5OiBvcGVuYWlBcGlLZXksXHJcbn0pXHJcblxyXG5leHBvcnQgeyBvcGVuYWkgfVxyXG5cclxuLy8gRW1iZWRkaW5nIGZ1bmN0aW9uIGZvciBSQUdcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEVtYmVkZGluZyh0ZXh0OiBzdHJpbmcpOiBQcm9taXNlPG51bWJlcltdPiB7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBvcGVuYWkuZW1iZWRkaW5ncy5jcmVhdGUoe1xyXG4gICAgbW9kZWw6ICd0ZXh0LWVtYmVkZGluZy0zLWxhcmdlJyxcclxuICAgIGlucHV0OiB0ZXh0LFxyXG4gIH0pXHJcbiAgXHJcbiAgcmV0dXJuIHJlc3BvbnNlLmRhdGFbMF0uZW1iZWRkaW5nXHJcbn1cclxuXHJcbi8vIENoYXQgY29tcGxldGlvbiBmb3IgdGhlIGNoYXRib3RcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldENoYXRDb21wbGV0aW9uKFxyXG4gIG1lc3NhZ2VzOiBBcnJheTx7IHJvbGU6ICd1c2VyJyB8ICdhc3Npc3RhbnQnIHwgJ3N5c3RlbSc7IGNvbnRlbnQ6IHN0cmluZyB9PixcclxuICB0ZW1wZXJhdHVyZTogbnVtYmVyID0gMC4yXHJcbik6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBvcGVuYWkuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xyXG4gICAgbW9kZWw6ICdncHQtNG8tbWluaScsXHJcbiAgICBtZXNzYWdlcyxcclxuICAgIHRlbXBlcmF0dXJlLFxyXG4gICAgbWF4X3Rva2VuczogMTAwMCxcclxuICB9KVxyXG4gIFxyXG4gIHJldHVybiByZXNwb25zZS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudCB8fCAnJ1xyXG59XHJcbiJdLCJuYW1lcyI6WyJPcGVuQUkiLCJvcGVuYWlBcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTkFJX0FQSV9LRVkiLCJjb25zb2xlIiwibG9nIiwid2FybiIsIm9wZW5haSIsImFwaUtleSIsImdldEVtYmVkZGluZyIsInRleHQiLCJyZXNwb25zZSIsImVtYmVkZGluZ3MiLCJjcmVhdGUiLCJtb2RlbCIsImlucHV0IiwiZGF0YSIsImVtYmVkZGluZyIsImdldENoYXRDb21wbGV0aW9uIiwibWVzc2FnZXMiLCJ0ZW1wZXJhdHVyZSIsImNoYXQiLCJjb21wbGV0aW9ucyIsIm1heF90b2tlbnMiLCJjaG9pY2VzIiwibWVzc2FnZSIsImNvbnRlbnQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/openai.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/search.ts":
/*!***************************!*\
  !*** ./src/lib/search.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCourseScore: () => (/* binding */ calculateCourseScore),\n/* harmony export */   searchCourses: () => (/* binding */ searchCourses),\n/* harmony export */   searchElectiveDocs: () => (/* binding */ searchElectiveDocs)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./openai */ \"(rsc)/./src/lib/openai.ts\");\n\n\n// Vector similarity search for RAG\nasync function searchElectiveDocs(query, threshold = 0.5, limit = 10) {\n    const queryEmbedding = await (0,_openai__WEBPACK_IMPORTED_MODULE_1__.getEmbedding)(query);\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc('search_elective_docs', {\n        query_embedding: queryEmbedding,\n        match_threshold: threshold,\n        match_count: limit\n    });\n    if (error) {\n        console.error('Vector search error:', error);\n        return [];\n    }\n    return data || [];\n}\n// Course search with filters\nasync function searchCourses(query, filters = {}, limit = 20) {\n    let supabaseQuery = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('courses').select('*').limit(limit);\n    // Apply text search\n    if (query) {\n        supabaseQuery = supabaseQuery.or(`title.ilike.%${query}%,description.ilike.%${query}%`);\n    }\n    // Apply filters\n    if (filters.term) {\n        // Use the correct JSONB operator for array contains\n        supabaseQuery = supabaseQuery.filter('terms_offered', 'cs', `[\"${filters.term}\"]`);\n    }\n    if (filters.dept && filters.dept.length > 0) {\n        supabaseQuery = supabaseQuery.in('dept', filters.dept);\n    }\n    if (filters.level && filters.level.length > 0) {\n        supabaseQuery = supabaseQuery.in('level', filters.level);\n    }\n    if (filters.skills && filters.skills.length > 0) {\n        // Use the correct JSONB operator for array intersection\n        supabaseQuery = supabaseQuery.filter('skills', 'cs', `[\"${filters.skills.join('\",\"')}\"]`);\n    }\n    if (filters.max_workload) {\n        // Assuming workload is stored as a composite score\n        supabaseQuery = supabaseQuery.lte('workload->total', filters.max_workload);\n    }\n    const { data, error } = await supabaseQuery;\n    if (error) {\n        console.error('Course search error:', error);\n        return [];\n    }\n    return data || [];\n}\n// Calculate course recommendation score\nfunction calculateCourseScore(course, profile, goalTags) {\n    let score = 0;\n    const explanation = [];\n    const counts_toward = [];\n    let prereqs_met = true;\n    const next_offered = [];\n    let workload_score = 5 // Default to medium workload\n    ;\n    // Goal match (0-40 points)\n    const goalMatch = calculateGoalMatch(course, goalTags);\n    score += goalMatch.score;\n    explanation.push(...goalMatch.explanations);\n    // Program fit (0-15 points)\n    const programFit = calculateProgramFit(course, profile);\n    score += programFit.score;\n    explanation.push(...programFit.explanations);\n    // Prerequisites check (0-15 points)\n    const prereqCheck = checkPrerequisites(course, profile.completed_courses);\n    score += prereqCheck.score;\n    prereqs_met = prereqCheck.met;\n    explanation.push(...prereqCheck.explanations);\n    // Term availability (0-10 points)\n    const termCheck = checkTermAvailability(course, profile.current_term);\n    score += termCheck.score;\n    next_offered.push(...termCheck.offered_terms);\n    explanation.push(...termCheck.explanations);\n    // Workload alignment (0-10 points)\n    const workloadCheck = checkWorkloadAlignment(course, profile.constraints);\n    score += workloadCheck.score;\n    workload_score = workloadCheck.score;\n    explanation.push(...workloadCheck.explanations);\n    // Level progression (0-10 points)\n    const levelCheck = checkLevelProgression(course, profile.current_term);\n    score += levelCheck.score;\n    explanation.push(...levelCheck.explanations);\n    return {\n        score: Math.round(score),\n        explanation,\n        counts_toward,\n        prereqs_met,\n        next_offered,\n        workload_score\n    };\n}\nfunction calculateGoalMatch(course, goalTags) {\n    let score = 0;\n    const explanations = [];\n    const courseSkills = course.skills.map((s)=>s.toLowerCase());\n    const goalSkills = goalTags.map((g)=>g.toLowerCase());\n    const matches = courseSkills.filter((skill)=>goalSkills.some((goal)=>skill.includes(goal) || goal.includes(skill)));\n    if (matches.length > 0) {\n        score = Math.min(40, matches.length * 10);\n        explanations.push(`Matches your goals: ${matches.join(', ')}`);\n    } else {\n        explanations.push('Limited alignment with your stated goals');\n    }\n    return {\n        score,\n        explanations\n    };\n}\nfunction calculateProgramFit(course, profile) {\n    let score = 0;\n    const explanations = [];\n    // Check if course is from same department\n    if (profile.program && course.dept === profile.program) {\n        score += 10;\n        explanations.push(`Same department as your program (${profile.program})`);\n    } else if (profile.program) {\n        score += 5;\n        explanations.push(`Cross-departmental course (${course.dept})`);\n    }\n    // Check if course level is appropriate\n    if (profile.current_term) {\n        const termLevel = getTermLevel(profile.current_term);\n        if (course.level >= termLevel) {\n            score += 5;\n            explanations.push(`Appropriate level for ${profile.current_term}`);\n        }\n    }\n    return {\n        score,\n        explanations\n    };\n}\nfunction checkPrerequisites(course, completedCourses) {\n    let score = 0;\n    const explanations = [];\n    if (!course.prereqs) {\n        score = 15;\n        explanations.push('No prerequisites required');\n        return {\n            score,\n            met: true,\n            explanations\n        };\n    }\n    // Simple prerequisite checking - in reality, this would be more sophisticated\n    const prereqList = course.prereqs.split(',').map((p)=>p.trim());\n    const metPrereqs = prereqList.filter((prereq)=>completedCourses.some((completed)=>completed.toLowerCase().includes(prereq.toLowerCase())));\n    if (metPrereqs.length === prereqList.length) {\n        score = 15;\n        explanations.push('All prerequisites met');\n    } else if (metPrereqs.length > 0) {\n        score = 8;\n        explanations.push(`Some prerequisites met (${metPrereqs.length}/${prereqList.length})`);\n    } else {\n        score = 0;\n        explanations.push(`Prerequisites not met: ${course.prereqs}`);\n    }\n    return {\n        score,\n        met: metPrereqs.length === prereqList.length,\n        explanations\n    };\n}\nfunction checkTermAvailability(course, currentTerm) {\n    let score = 0;\n    const explanations = [];\n    const offered_terms = [];\n    if (!course.terms_offered || course.terms_offered.length === 0) {\n        explanations.push('Term availability unknown');\n        return {\n            score: 5,\n            offered_terms,\n            explanations\n        };\n    }\n    offered_terms.push(...course.terms_offered);\n    if (currentTerm) {\n        const nextTerm = getNextTerm(currentTerm);\n        if (course.terms_offered.includes(nextTerm)) {\n            score = 10;\n            explanations.push(`Offered next term (${nextTerm})`);\n        } else if (course.terms_offered.length > 0) {\n            score = 5;\n            explanations.push(`Offered in: ${course.terms_offered.join(', ')}`);\n        }\n    } else {\n        score = 5;\n        explanations.push(`Offered in: ${course.terms_offered.join(', ')}`);\n    }\n    return {\n        score,\n        offered_terms,\n        explanations\n    };\n}\nfunction checkWorkloadAlignment(course, constraints) {\n    let score = 5 // Default medium\n    ;\n    const explanations = [];\n    if (!course.workload || !constraints?.max_workload) {\n        return {\n            score,\n            explanations\n        };\n    }\n    const totalWorkload = Object.values(course.workload).reduce((sum, val)=>sum + val, 0);\n    if (totalWorkload <= constraints.max_workload) {\n        score = 10;\n        explanations.push(`Workload fits your constraints (${totalWorkload}/week)`);\n    } else {\n        score = 2;\n        explanations.push(`Heavy workload (${totalWorkload}/week)`);\n    }\n    return {\n        score,\n        explanations\n    };\n}\nfunction checkLevelProgression(course, currentTerm) {\n    let score = 5 // Default\n    ;\n    const explanations = [];\n    if (!currentTerm) {\n        return {\n            score,\n            explanations\n        };\n    }\n    const termLevel = getTermLevel(currentTerm);\n    if (course.level >= termLevel && course.level <= termLevel + 100) {\n        score = 10;\n        explanations.push(`Appropriate level for ${currentTerm}`);\n    } else if (course.level < termLevel) {\n        score = 3;\n        explanations.push(`Lower level course (${course.level}xx)`);\n    } else {\n        score = 7;\n        explanations.push(`Advanced course (${course.level}xx)`);\n    }\n    return {\n        score,\n        explanations\n    };\n}\n// Helper functions\nfunction getTermLevel(term) {\n    const termMap = {\n        '1A': 100,\n        '1B': 100,\n        '2A': 200,\n        '2B': 200,\n        '3A': 300,\n        '3B': 300,\n        '4A': 400,\n        '4B': 400\n    };\n    return termMap[term] || 200;\n}\nfunction getNextTerm(currentTerm) {\n    const termMap = {\n        '1A': '1B',\n        '1B': '2A',\n        '2A': '2B',\n        '2B': '3A',\n        '3A': '3B',\n        '3B': '4A',\n        '4A': '4B',\n        '4B': '4B'\n    };\n    return termMap[currentTerm] || '2A';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/search.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Client-side environment variables (must be prefixed with NEXT_PUBLIC_)\nconst supabaseUrl = \"https://ldjhtpdidpruzeyuxdfo.supabase.co\" || 0 || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxkamh0cGRpZHBydXpleXV4ZGZvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0NDk5ODksImV4cCI6MjA3MzAyNTk4OX0.G9z3wtweZXO0GcT2Ov0Zt9cng6lUeqA0w9KK5YYTcN4\" || 0 || 0;\n// Server-side environment variables (for API routes)\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'placeholder-service-key';\n// Detailed configuration logging\nconsole.log('🔧 Client-side Configuration Status:');\nconsole.log('  NEXT_PUBLIC_SUPABASE_URL:',  true ? '✅ SET' : 0);\nconsole.log('  NEXT_PUBLIC_SUPABASE_ANON_KEY:',  true ? '✅ SET' : 0);\nconsole.log('  Fallback SUPABASE_URL:', process.env.SUPABASE_URL ? '✅ SET' : '❌ NOT SET');\nconsole.log('  Fallback SUPABASE_KEY:', process.env.SUPABASE_KEY ? '✅ SET' : '❌ NOT SET');\n// Check if environment variables are properly set\nif (supabaseUrl === 'https://placeholder.supabase.co' || supabaseAnonKey === 'placeholder-key') {\n    console.warn('⚠️ Supabase environment variables not configured for client-side.');\n    console.warn('📝 Required variables for client-side:');\n    console.warn('   NEXT_PUBLIC_SUPABASE_URL=your_supabase_url');\n    console.warn('   NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key');\n    console.warn('📝 Or add the non-prefixed versions to your .env file');\n} else {\n    console.log('✅ Supabase client configured successfully!');\n}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        persistSession: false\n    }\n});\n// For server-side operations that need elevated permissions\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        persistSession: false\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDtBQUVwRCx5RUFBeUU7QUFDekUsTUFBTUMsY0FBc0JDLDBDQUFvQyxJQUFJQSxDQUF3QixJQUFJLENBQWlDO0FBQ2pJLE1BQU1JLGtCQUEwQkosa05BQXlDLElBQUlBLENBQXdCLElBQUksQ0FBaUI7QUFFMUgscURBQXFEO0FBQ3JELE1BQU1PLHFCQUE2QlAsUUFBUUMsR0FBRyxDQUFDTyx5QkFBeUIsSUFBSTtBQUU1RSxpQ0FBaUM7QUFDakNDLFFBQVFDLEdBQUcsQ0FBQztBQUNaRCxRQUFRQyxHQUFHLENBQUMsK0JBQStCVixLQUFvQyxHQUFHLFVBQVUsQ0FBVztBQUN2R1MsUUFBUUMsR0FBRyxDQUFDLG9DQUFvQ1YsS0FBeUMsR0FBRyxVQUFVLENBQVc7QUFDakhTLFFBQVFDLEdBQUcsQ0FBQyw0QkFBNEJWLFFBQVFDLEdBQUcsQ0FBQ0UsWUFBWSxHQUFHLFVBQVU7QUFDN0VNLFFBQVFDLEdBQUcsQ0FBQyw0QkFBNEJWLFFBQVFDLEdBQUcsQ0FBQ0ssWUFBWSxHQUFHLFVBQVU7QUFFN0Usa0RBQWtEO0FBQ2xELElBQUlQLGdCQUFnQixxQ0FBcUNLLG9CQUFvQixtQkFBbUI7SUFDOUZLLFFBQVFFLElBQUksQ0FBQztJQUNiRixRQUFRRSxJQUFJLENBQUM7SUFDYkYsUUFBUUUsSUFBSSxDQUFDO0lBQ2JGLFFBQVFFLElBQUksQ0FBQztJQUNiRixRQUFRRSxJQUFJLENBQUM7QUFDZixPQUFPO0lBQ0xGLFFBQVFDLEdBQUcsQ0FBQztBQUNkO0FBRU8sTUFBTUUsV0FBV2QsbUVBQVlBLENBQUNDLGFBQWFLLGlCQUFpQjtJQUNqRVMsTUFBTTtRQUNKQyxnQkFBZ0I7SUFDbEI7QUFDRixHQUFFO0FBRUYsNERBQTREO0FBQ3JELE1BQU1DLGdCQUFnQmpCLG1FQUFZQSxDQUN2Q0MsYUFDQVEsb0JBQ0E7SUFDRU0sTUFBTTtRQUNKQyxnQkFBZ0I7SUFDbEI7QUFDRixHQUNEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNoaWxvXFxFbGVjdGl2ZSBDaG9vc2VyXFxmcm9udGVuZFxcc3JjXFxsaWJcXHN1cGFiYXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuLy8gQ2xpZW50LXNpZGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIChtdXN0IGJlIHByZWZpeGVkIHdpdGggTkVYVF9QVUJMSUNfKVxuY29uc3Qgc3VwYWJhc2VVcmw6IHN0cmluZyA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCB8fCBwcm9jZXNzLmVudi5TVVBBQkFTRV9VUkwgfHwgJ2h0dHBzOi8vcGxhY2Vob2xkZXIuc3VwYWJhc2UuY28nXG5jb25zdCBzdXBhYmFzZUFub25LZXk6IHN0cmluZyA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIHx8IHByb2Nlc3MuZW52LlNVUEFCQVNFX0tFWSB8fCAncGxhY2Vob2xkZXIta2V5J1xuXG4vLyBTZXJ2ZXItc2lkZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgKGZvciBBUEkgcm91dGVzKVxuY29uc3Qgc3VwYWJhc2VTZXJ2aWNlS2V5OiBzdHJpbmcgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIHx8ICdwbGFjZWhvbGRlci1zZXJ2aWNlLWtleSdcblxuLy8gRGV0YWlsZWQgY29uZmlndXJhdGlvbiBsb2dnaW5nXG5jb25zb2xlLmxvZygn8J+UpyBDbGllbnQtc2lkZSBDb25maWd1cmF0aW9uIFN0YXR1czonKVxuY29uc29sZS5sb2coJyAgTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMOicsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCA/ICfinIUgU0VUJyA6ICfinYwgTk9UIFNFVCcpXG5jb25zb2xlLmxvZygnICBORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWTonLCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSA/ICfinIUgU0VUJyA6ICfinYwgTk9UIFNFVCcpXG5jb25zb2xlLmxvZygnICBGYWxsYmFjayBTVVBBQkFTRV9VUkw6JywgcHJvY2Vzcy5lbnYuU1VQQUJBU0VfVVJMID8gJ+KchSBTRVQnIDogJ+KdjCBOT1QgU0VUJylcbmNvbnNvbGUubG9nKCcgIEZhbGxiYWNrIFNVUEFCQVNFX0tFWTonLCBwcm9jZXNzLmVudi5TVVBBQkFTRV9LRVkgPyAn4pyFIFNFVCcgOiAn4p2MIE5PVCBTRVQnKVxuXG4vLyBDaGVjayBpZiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIHByb3Blcmx5IHNldFxuaWYgKHN1cGFiYXNlVXJsID09PSAnaHR0cHM6Ly9wbGFjZWhvbGRlci5zdXBhYmFzZS5jbycgfHwgc3VwYWJhc2VBbm9uS2V5ID09PSAncGxhY2Vob2xkZXIta2V5Jykge1xuICBjb25zb2xlLndhcm4oJ+KaoO+4jyBTdXBhYmFzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgbm90IGNvbmZpZ3VyZWQgZm9yIGNsaWVudC1zaWRlLicpXG4gIGNvbnNvbGUud2Fybign8J+TnSBSZXF1aXJlZCB2YXJpYWJsZXMgZm9yIGNsaWVudC1zaWRlOicpXG4gIGNvbnNvbGUud2FybignICAgTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMPXlvdXJfc3VwYWJhc2VfdXJsJylcbiAgY29uc29sZS53YXJuKCcgICBORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWT15b3VyX3N1cGFiYXNlX2Fub25fa2V5JylcbiAgY29uc29sZS53YXJuKCfwn5OdIE9yIGFkZCB0aGUgbm9uLXByZWZpeGVkIHZlcnNpb25zIHRvIHlvdXIgLmVudiBmaWxlJylcbn0gZWxzZSB7XG4gIGNvbnNvbGUubG9nKCfinIUgU3VwYWJhc2UgY2xpZW50IGNvbmZpZ3VyZWQgc3VjY2Vzc2Z1bGx5IScpXG59XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5LCB7XG4gIGF1dGg6IHtcbiAgICBwZXJzaXN0U2Vzc2lvbjogZmFsc2VcbiAgfVxufSlcblxuLy8gRm9yIHNlcnZlci1zaWRlIG9wZXJhdGlvbnMgdGhhdCBuZWVkIGVsZXZhdGVkIHBlcm1pc3Npb25zXG5leHBvcnQgY29uc3Qgc3VwYWJhc2VBZG1pbiA9IGNyZWF0ZUNsaWVudChcbiAgc3VwYWJhc2VVcmwsXG4gIHN1cGFiYXNlU2VydmljZUtleSxcbiAge1xuICAgIGF1dGg6IHtcbiAgICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZVxuICAgIH1cbiAgfVxuKVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIlNVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwiU1VQQUJBU0VfS0VZIiwic3VwYWJhc2VTZXJ2aWNlS2V5IiwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSIsImNvbnNvbGUiLCJsb2ciLCJ3YXJuIiwic3VwYWJhc2UiLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJzdXBhYmFzZUFkbWluIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/web-search.ts":
/*!*******************************!*\
  !*** ./src/lib/web-search.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enhancedSearch: () => (/* binding */ enhancedSearch),\n/* harmony export */   extractWebPageContent: () => (/* binding */ extractWebPageContent),\n/* harmony export */   processWebSearchResults: () => (/* binding */ processWebSearchResults),\n/* harmony export */   searchWaterlooWebsite: () => (/* binding */ searchWaterlooWebsite),\n/* harmony export */   shouldTriggerWebSearch: () => (/* binding */ shouldTriggerWebSearch)\n/* harmony export */ });\n/* harmony import */ var _openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./openai */ \"(rsc)/./src/lib/openai.ts\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n/* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./search */ \"(rsc)/./src/lib/search.ts\");\n\n\n\n// Fallback web search when database doesn't have information\nasync function searchWaterlooWebsite(query, maxResults = 5) {\n    // In a real implementation, you would use:\n    // - Tavily API\n    // - Bing Search API\n    // - Google Custom Search API\n    // - Or scrape with proper rate limiting and respect for robots.txt\n    // For now, return mock results\n    const mockResults = [\n        {\n            title: `Waterloo Engineering - ${query}`,\n            url: `https://uwaterloo.ca/engineering/undergraduate-studies/${query.toLowerCase().replace(/\\s+/g, '-')}`,\n            content: `Information about ${query} in Waterloo Engineering programs. This is a mock result for demonstration.`,\n            relevance_score: 0.9\n        }\n    ];\n    return mockResults.slice(0, maxResults);\n}\n// Extract and clean text from web pages\nasync function extractWebPageContent(url) {\n    try {\n        // In a real implementation, you would:\n        // 1. Fetch the URL with proper headers\n        // 2. Use trafilatura or similar to extract clean text\n        // 3. Handle different content types (HTML, PDF, etc.)\n        const response = await fetch(url, {\n            headers: {\n                'User-Agent': 'Waterloo Elective Chooser Bot 1.0'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        const html = await response.text();\n        // Simple text extraction - in reality, use trafilatura\n        const text = html.replace(/<script[^>]*>.*?<\\/script>/gi, '').replace(/<style[^>]*>.*?<\\/style>/gi, '').replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\n        return text;\n    } catch (error) {\n        console.error(`Failed to extract content from ${url}:`, error);\n        return '';\n    }\n}\n// Process web search results and store relevant chunks\nasync function processWebSearchResults(query, results) {\n    for (const result of results){\n        try {\n            const content = await extractWebPageContent(result.url);\n            if (content.length < 100) {\n                continue; // Skip if content is too short\n            }\n            // Chunk the content\n            const chunks = chunkText(content, 1000, 150);\n            // Store each chunk with embedding\n            for(let i = 0; i < chunks.length; i++){\n                const chunk = chunks[i];\n                const embedding = await (0,_openai__WEBPACK_IMPORTED_MODULE_0__.getEmbedding)(chunk);\n                await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from('elective_docs').insert({\n                    text: chunk,\n                    source_url: result.url,\n                    chunk_id: i,\n                    embedding: embedding\n                });\n            }\n        } catch (error) {\n            console.error(`Failed to process result ${result.url}:`, error);\n        }\n    }\n}\n// Check if we should trigger web search\nfunction shouldTriggerWebSearch(dbResults, query) {\n    // Trigger web search if:\n    // 1. No database results\n    // 2. Low confidence in results\n    // 3. Query contains specific course codes or terms not found\n    if (dbResults.length === 0) {\n        return true;\n    }\n    // Check for specific course codes (e.g., \"ECE486\", \"MTE380\")\n    const courseCodePattern = /[A-Z]{2,4}\\s*\\d{3,4}/i;\n    if (courseCodePattern.test(query) && dbResults.length < 3) {\n        return true;\n    }\n    // Check for low confidence (if we had confidence scores)\n    // This would be implemented based on your specific confidence metrics\n    return false;\n}\n// Enhanced search that combines database and web search\nasync function enhancedSearch(query, filters = {}) {\n    // First, try database search\n    const dbResults = await (0,_search__WEBPACK_IMPORTED_MODULE_2__.searchCourses)(query, filters);\n    let webResults = [];\n    let usedWebSearch = false;\n    // Web search disabled for now to avoid 404 errors\n    // if (shouldTriggerWebSearch(dbResults, query)) {\n    //   webResults = await searchWaterlooWebsite(query)\n    //   \n    //   if (webResults.length > 0) {\n    //     // Process and store web results\n    //     await processWebSearchResults(query, webResults)\n    //     usedWebSearch = true\n    //     \n    //     // Re-search database with newly added content\n    //     const newDbResults = await searchCourses(query, filters)\n    //     dbResults.push(...newDbResults)\n    //   }\n    // }\n    // Combine and deduplicate results\n    const allResults = [\n        ...dbResults\n    ];\n    const sources = [\n        ...new Set([\n            ...dbResults.map((r)=>r.source_url).filter(Boolean),\n            ...webResults.map((r)=>r.url)\n        ])\n    ];\n    return {\n        results: allResults,\n        sources,\n        used_web_search: usedWebSearch\n    };\n}\n// Helper function to chunk text\nfunction chunkText(text, chunkSize = 1000, overlap = 150) {\n    const chunks = [];\n    let start = 0;\n    while(start < text.length){\n        const end = Math.min(start + chunkSize, text.length);\n        let chunk = text.slice(start, end);\n        // Try to break at sentence boundaries\n        if (end < text.length) {\n            const lastPeriod = chunk.lastIndexOf('.');\n            const lastNewline = chunk.lastIndexOf('\\n');\n            const breakPoint = Math.max(lastPeriod, lastNewline);\n            if (breakPoint > start + chunkSize * 0.5) {\n                chunk = chunk.slice(0, breakPoint + 1);\n            }\n        }\n        chunks.push(chunk.trim());\n        start = start + chunk.length - overlap;\n    }\n    return chunks.filter((chunk)=>chunk.length > 50);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/web-search.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/formdata-node","vendor-chunks/webidl-conversions","vendor-chunks/openai","vendor-chunks/@langchain","vendor-chunks/semver","vendor-chunks/zod-to-json-schema","vendor-chunks/langsmith","vendor-chunks/zod","vendor-chunks/form-data-encoder","vendor-chunks/uuid","vendor-chunks/@cfworker","vendor-chunks/agentkeepalive","vendor-chunks/retry","vendor-chunks/p-queue","vendor-chunks/web-streams-polyfill","vendor-chunks/node-fetch","vendor-chunks/p-timeout","vendor-chunks/p-retry","vendor-chunks/p-finally","vendor-chunks/ms","vendor-chunks/humanize-ms","vendor-chunks/eventemitter3","vendor-chunks/event-target-shim","vendor-chunks/decamelize","vendor-chunks/camelcase","vendor-chunks/ansi-styles","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cshilo%5CElective%20Chooser%5Cfrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();